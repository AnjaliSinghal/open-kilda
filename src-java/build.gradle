plugins {
    id 'org.sonarqube' version '2.8'
}

allprojects {
    group = 'org.openkilda'
    version = '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation(platform("com.fasterxml.jackson:jackson-bom:2.10.0"))
        implementation(platform('org.springframework:spring-framework-bom:4.2.3.RELEASE'))
        implementation(platform('org.springframework.boot:spring-boot-dependencies:1.5.6.RELEASE')) {
            // The older version conflicts with another from org.neo4j:neo4j-ogm-test
            exclude group: 'org.eclipse.jetty'
        }

        constraints {
            compileOnly 'org.apache.storm:storm-core:1.1.0'
            testImplementation 'org.apache.storm:storm-core:1.1.0'
            implementation 'org.apache.storm:storm-kafka-client:1.1.0'
            implementation 'org.apache.storm:storm-opentsdb:1.1.0'
            implementation 'org.apache.storm:flux-core:1.1.0'
            implementation 'org.apache.storm:flux-wrappers:1.1.0'

            implementation 'org.squirrelframework:squirrel-foundation:0.3.8'

            implementation 'org.neo4j.driver:neo4j-java-driver:1.5.1'
            implementation 'org.neo4j:neo4j-ogm-core:3.1.3'
            implementation 'org.neo4j:neo4j-ogm-bolt-driver:3.1.3'
            testImplementation 'org.neo4j:neo4j-ogm-test:3.1.3'
            testImplementation 'org.neo4j:neo4j:3.3.3'
            testImplementation 'org.neo4j:neo4j-bolt:3.3.3'

            implementation 'com.google.guava:guava:20.0'
            implementation 'net.jodah:failsafe:1.0.5'
            implementation 'io.github.classgraph:classgraph:4.8.14'
            implementation 'org.apache.commons:commons-collections4:4.1'
            implementation 'org.apache.commons:commons-lang3:3.7'
            implementation 'org.apache.commons:commons-io:1.3.2'
            implementation 'commons-lang:commons-lang:2.6'
            implementation 'commons-io:commons-io:2.5'
            implementation 'com.auth0:java-jwt:3.2.0'
            implementation 'args4j:args4j:2.33'
            implementation 'com.google.code.gson:gson:2.8.2'
            implementation 'com.fasterxml.uuid:java-uuid-generator:3.1.5'

            implementation 'org.apache.kafka:kafka-clients:0.10.2.1'
            implementation 'org.apache.kafka:kafka_2.11:0.10.2.1'

            implementation 'com.sabre.oss.conf4j:conf4j-api:1.0'
            implementation 'com.sabre.oss.conf4j:conf4j-core:1.0'
            implementation 'com.sabre.oss.conf4j:conf4j-spring-boot:1.0'

            compileOnly 'org.projectlombok:lombok:1.18.10'
            testCompileOnly 'org.projectlombok:lombok:1.18.10'
            annotationProcessor 'org.projectlombok:lombok:1.18.10'
            testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

            implementation 'org.slf4j:slf4j-api:1.7.25'
            testRuntimeOnly 'org.slf4j:slf4j-api:1.7.25'
            testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.25'
            implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.8'
            testRuntimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.8'
            implementation 'org.apache.logging.log4j:log4j-api:2.8'
            testRuntimeOnly 'org.apache.logging.log4j:log4j-api:2.8'
            implementation 'org.apache.logging.log4j:log4j-core:2.8'
            testRuntimeOnly 'org.apache.logging.log4j:log4j-core:2.8'
            implementation 'net.logstash.logback:logstash-logback-encoder:4.11'
            testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'

            implementation 'junit:junit:4.12'
            implementation 'com.nitorcreations:matchers:1.3'
            testImplementation 'junit:junit:4.12'
            testImplementation 'org.hamcrest:hamcrest-library:1.3'
            testImplementation 'org.mockito:mockito-core:2.8.47'
            testImplementation 'org.easymock:easymock:3.4'
            testImplementation 'pl.pragmatists:JUnitParams:1.0.5'
            testImplementation 'org.apache.curator:curator-test:2.8.0'
            testImplementation 'org.mock-server:mockserver-netty:3.11'
            testImplementation 'io.netty:netty-all:4.1.42.Final'
            testImplementation 'org.clojure:clojure:1.10.0'
            testRuntimeOnly 'javax.servlet:javax.servlet-api:3.1.0'

            implementation 'javax.validation:validation-api:2.0.0.Final'
            implementation 'org.hibernate.validator:hibernate-validator:6.0.10.Final'
            implementation 'org.glassfish:javax.el:3.0.1-b09'
            testImplementation 'org.glassfish:javax.el:3.0.1-b09'

            implementation 'org.aspectj:aspectjrt:1.8.13'
            implementation 'org.mapstruct:mapstruct-jdk8:1.3.0.Final'
            implementation 'org.mapstruct:mapstruct-processor:1.3.0.Final'
            annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
            testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'

            implementation 'org.springframework.kafka:spring-kafka:1.2.2.RELEASE'

            implementation 'io.grpc:grpc-protobuf:1.18.0'
            implementation 'io.grpc:grpc-stub:1.18.0'
            implementation 'io.grpc:grpc-alts:1.18.0'
            testImplementation 'io.grpc:grpc-testing:1.18.0'
            implementation 'com.google.protobuf:protobuf-java-util:3.6.1'

            implementation 'io.springfox:springfox-swagger2:2.9.2'
            implementation 'io.springfox:springfox-swagger-ui:2.9.2'
        }
    }

    task collectDependencyJars(type: Copy) {
        into "$buildDir/dependency-jars"
        from configurations.runtimeClasspath
    }

    checkstyle {
        toolVersion "8.18"
        configDirectory = rootProject.file('checkstyle')
        configProperties = [
                'checkstyle.suppression.file': project.file('src/checkstyle/checkstyle-suppressions.xml'),
                'checkstyle.header.file'     : rootProject.file('checkstyle/checkstyle-header.txt')
        ]

        showViolations = true
        ignoreFailures = false
        maxWarnings = 0

        configurations {
            checkstyle
        }

        dependencies {
            checkstyle 'com.puppycrawl.tools:checkstyle:8.18'
        }
    }

    jacoco {
        toolVersion = "0.8.5"
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.enabled true
        }
    }
}
